@model IEnumerable<RealSys.CoreLib.Models.Erp.SalesLead>

@{
    ViewBag.Title = "Sales Leads ";
    //Session["ROOTMENUID"] = 2;
    var SalesStatCode = (List<RealSys.CoreLib.Models.Erp.SalesStatusCode>)ViewBag.StatusCodes;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string USER = ViewBag.User;
    bool ISADMIN = ViewBag.IsAdmin;

    var BIDDING = "Bidding Only";
    var FIRM = "Firm Inquiry";
    var BUYING = "Buying Inquiry";
}

<link href="/Content/TableStyles.css" rel="stylesheet" />
<style>
    .link-status {
        padding: 10px;
    }

        .link-status:hover {
            color: white;
        }

    .cursor-hand {
        color: #337ab7;
    }

        .cursor-hand:hover {
            text-decoration: underline;
        }

    .filter-link {
        margin-right: 5px;
    }
</style>

<div class="view-header">
    <h2>Sales Lead: List </h2>

     @Html.ActionLink("Create New", "Create", null, null,new { @class = "btn btn-primary" })
    
</div>

<div class="view-content content-min-width">

    @if (ISADMIN)
    {
        <p>Viewing as Admin </p>
    }

    <!-- Status Filters -->
    <div class="btn btn-group" role="group">

        <span class="input-group-text">Filters:</span>

        @Html.ActionLink("New", "Index", new { sortid = 1 }, new { @id = "status-1", @class = "btn btn-outline-primary" })
            @*@{Html.RenderPartial("GetLeadStatusCount", new { statusId = 1 });}*@


        @Html.ActionLink("Sales", "Index", new { sortid = 2 }, new { @id = "status-2", @class = "btn btn-outline-primary" })
            @*@{Html.RenderPartial("GetLeadStatusCount", new { statusId = 2 });}*@


        @Html.ActionLink("Procurement", "Index", new { sortid = 3 }, new { @id = "status-3", @class = "btn btn-outline-primary" })
            @*@{Html.RenderPartial("GetLeadStatusCount", new { statusId = 3 });}*@
       
       
            @Html.ActionLink("For Approval", "Index", new { sortid = 4 }, new { @id = "status-4", @class = "btn btn-outline-primary" })
          @*  @{
                Html.RenderPartial("GetLeadStatusCount", new { statusId = 4 });
            }*@

        @Html.ActionLink("Approved", "Index", new { sortid = 5 }, new { @id = "status-5", @class = "btn btn-outline-primary" })
            @*@{Html.RenderPartial("GetLeadStatusCount", new { statusId = 5 });}*@

        @Html.ActionLink("Awarded", "Index", new { sortid = 6 }, new { @id = "status-6", @class = "btn btn-outline-primary" })
            @*@{Html.RenderPartial("GetLeadStatusCount", new { statusId = 6 });}*@

        @Html.ActionLink("Rejected", "Index", new { sortid = 7 }, new { @id = "status-7", @class = "btn btn-outline-primary" })
            @{
                //Html.RenderPartial("GetLeadStatusCount", new { statusId = 7 });
            }
       
            @Html.ActionLink("Closed", "Index", new { sortid = 8 }, new { @id = "status-8", @class = "btn btn-outline-primary" })
            @{ 
                //Html.RenderPartial("GetLeadStatusCount", new { statusId = 8 });
            }

        @Html.ActionLink("All", "Index", new { sortid = 9 }, new { @id = "status-9", @class = "btn btn-outline-primary" })
      
    </div>

    <table class="table table-no-border">

        @foreach (var item in Model)
        {

            if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
            {
                var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;
            }

            <tr>
                      
                <td id="lead@(item.Id)" class="td-no-border" style="padding-right: 20px;">
                    
                      
                    <div style="text-align:center;" class="date-box card ">
                        <span style="color:darkblue; font: bold 12px arial, verdana;">@item.Date.ToString("MMM-yyyy")</span>
                        <br /><span style="color:blue; font: bold 28px arial, verdana;">@item.Date.ToString("dd")</span>
                        <span style="color:blue; font: bold 12px arial, verdana;">(@item.Date.ToString("ddd"))</span>
                        @if (item.Price != 0)
                        {
                            <br /><br /><span style="color:red; font: normal 18px arial, verdana;">@item.Price.ToString("##,###")</span>
                        }
                    </div>

                    @*@Html.Partial("_PartialLeadItemWeight", item,  new ViewDataDictionary (ViewData))*@

                        @foreach (var status in item.SalesStatus)
                        {
                            if (status.SalesStatusCodeId == 5)
                            {
                                <img src="~/Images/Customers/Category/Active-30.png" height="20" alt="ACCEPTED" />
                            }

                            if (status.SalesStatusCodeId == 7)
                            {
                                <img src="~/Images/SalesLead/close-icon.png" height="20" alt="ACCEPTED" />
                            }
                        }
                    
                </td>
                <td>
                <div class="card"> 
                     <div class="card-body">
                     
                    <!--Sales Lead Status-->
                    @Html.Partial("_PartialLeadStatus", item)

                    <div>
                        <span style="color:darkgreen;font:bold 16px arial, verdana;">
                            @try
                            {
                                if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
                                {
                                    var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;

                                    <text>
                                        @company.Name
                                    </text>
                                }
                            }catch{}
                        </span> |
                        <span style="color:maroon;font:bold 12px arial, verdana;">
                            @Html.DisplayFor(modelItem => item.CustName)

                            @if (item.CustPhone == null)
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustPhone)
                            }

                            @if (item.CustEmail == null)
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustEmail)
                            }

                        </span>
                        &nbsp; &nbsp;

                        @if (USER == item.AssignedTo || ISADMIN)
                        {
                            <div class="btn-group" >
                                
                                @Html.ActionLink("Edit Lead", "Edit", null, new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm" }) 
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm" }) 
                                        @Html.ActionLink("Profitability", "SalesLeadCat", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm" })
                                <span class="cursor-hand btn btn-outline-secondary btn-sm" onclick="RevisionConfirmation(@item.Id)"> For Revision  </span>
                                
                            </div>
                        }

                        <span style="margin-left:10px;">
                            @foreach (var salescat in item.SalesLeadCategories)
                            {
                                <img src=@Url.Content(@salescat.SalesLeadCatCode.iconPath)
                                     alt=@salescat.SalesLeadCatCode.CatName height="20" width="20"
                                     title=@salescat.SalesLeadCatCode.CatName />
                            }
                        </span>

                        <br />
                        <span style="font-weight:600;color:#282828;">
                            @Html.DisplayFor(modelItem => item.SalesCode) -
                        </span>

                        <span style="font-weight:600;color:darkblue;">
                            @Html.DisplayFor(modelItem => item.Details)
                        </span>

                        @if (!String.IsNullOrEmpty(item.Commodity))
                        {
                            <br />
                            <span style="font:500 arial, verdana;">
                                Commodity:  @Html.DisplayFor(modelItem => item.Commodity)
                            </span>
                        }

                        @if (!String.IsNullOrEmpty(item.Remarks))
                        {
                            <br />
                            <span style="font:500 arial, verdana;">
                                Remarks: @Html.DisplayFor(modelItem => item.Remarks)
                            </span>
                        }



                                <div style="margin-top:20px;">
                                    <div class="card">
                                        <div class="card-header" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAct-@item.Id">
                                            <h6 class="mb-0">
                                                <span>
                                                    Sales Activities


                                                    @{
                                                        var latestActivity = new RealSys.CoreLib.Models.Erp.CustEntActivity();
                                                        if (item.SalesLeadCompanies.FirstOrDefault() != null)
                                                        {
                                                            if (item.SalesLeadCompanies.FirstOrDefault()
                                                            .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id)
                                                            .FirstOrDefault() != null)
                                                            {
                                                                latestActivity = item.SalesLeadCompanies.FirstOrDefault()
                                                                .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id)
                                                                .Where(s => s.SalesCode == item.SalesCode)
                                                                .FirstOrDefault();

                                                                if (latestActivity != null)
                                                                {
                                                                    <!-- Latest Activity Status   -->
                                                                    <span class="badge bg-secondary">
                                                                        @item.SalesLeadCompanies.FirstOrDefault().CustEntMain.CustEntActivities.Where(s => s.SalesCode == item.SalesCode).Count()
                                                                    </span>
                                                                   
                                                                        <span class="label label-default cursor-hand" onclick="ShowUpdateActivityStatus_Modal(@item.Id)"
                                                                              style="color:gray;font-size:12px;margin-left:40px">
                                                                        Last Activity: @latestActivity.CustEntActActionCode.Desc - @latestActivity.Remarks | @latestActivity.Date.ToString("MMM dd yyyy")

                                                                        <span style="margin-left:20px;">by: @latestActivity.Assigned.Split('@')[0]</span>
                                                                        </span>

                                                                }

                                                            }
                                                        }

                                                    }

                                                </span>
                                            </h6>
                                        </div>

                                        <div id="collapseAct-@item.Id" class="collapse clearfix">
                                            <div class="card card-body">
                                                 @await Html.PartialAsync("_PartialSalesLeadActivities", item, new ViewDataDictionary (ViewData))
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card">
                                        <div class="card-header" data-bs-toggle="collapse" data-bs-target="#collapseActProc-@item.Id">
                                            <h6 class="mb-0">
                                                <span>
                                                    Procurement Activities 
                                                </span>

                                                <span class="badge bg-secondary">
                                                    @item.SalesLeadSupActivities.Count()
                                                </span>
                                            </h6>
                                        </div>
                                        <div id="collapseActProc-@item.Id" class="collapse clearfix">
                                            <div class="card-body">
                                                <!-- Procurement Activities -->
                                                @if (ISADMIN)
                                                {
                                                <!-- Late Loading Procurment / Supplier Activities -->
                                                    @await Html.PartialAsync("_PartialProcActivities", item.SalesLeadSupActivities, new ViewDataDictionary(ViewData))
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card">
                                        <div class="card-header" id="headingThree" data-bs-toggle="collapse" data-bs-target="#collapseThree">
                                            <h6 class="mb-0">
                                                <span>
                                                   Supplier Items
                                                </span>
                                            </h6>
                                        </div>
                                        <div id="collapseThree" class="collapse clearfix" aria-labelledby="headingThree" data-parent="#accordionExample">
                                            <div class="card-body">
                                                @Html.Partial("_PartialSupplierItems", item.SalesLeadItems, new ViewDataDictionary (ViewData) {{ "Id", item.Id }})
                                            </div>
                                        </div>
                                    </div>
                                </div>

                       @* 
                        @Html.Partial("_PartialSalesLeadActivities", item,
                            new ViewDataDictionary (ViewData))


                        <!-- Late Loading Procurment / Supplier Items -->
                        @Html.Partial("_PartialSupplierItems", item.SalesLeadItems,
                            new ViewDataDictionary (ViewData) {{ "Id", item.Id }})
                       *@



                        <!--Add Files-->
                        @Html.Partial("_PartialLeadFiles", item.SalesLeadFiles.OrderByDescending(c => c.Id).FirstOrDefault(),
                            new ViewDataDictionary  (ViewData){{"Id", item.Id}, { "FileCount", item.SalesLeadFiles.Count() }})

                                <br />
                        <span style="font: status-bar; color:gray;">
                            Entered: @Html.DisplayFor(modelItem => item.EnteredBy)
                            @@ @Html.DisplayFor(modelItem => item.DtEntered)
                        </span>
                        <br />
                        <span style="font: status-bar; color:gray;">
                            Assigned: @Html.DisplayFor(modelItem => item.AssignedTo)
                        </span>

                    </div>

                     </div>
                    </div>
                </td>
            </tr>
        }

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="2">
                    <h3 class="text-center text-muted"> No Sales Lead Found </h3>
                </td>
            </tr>
        }

    </table>
</div>


@{Html.RenderPartial("AddSupItemPartial");}
@{Html.RenderPartial("_UpdateActivityStatus");}
@{Html.RenderPartial("_AddLeadWeight");}
@{Html.RenderPartial("_AddLeadFileLink");}

@section scripts
{
    <script src="~/js/Commons/Scroll.js"></script>
    <script type="text/javascript" src="~/js/SalesLeads/SalesLead.js"></script>
    <script type="text/javascript" src="~/js/SalesLeads/AddSupItem.js"></script>
    <script type="text/javascript" src="~/js/SalesLeads/AddLeadWeight.js"></script>
    <script type="text/javascript" src="~/js/SalesLeads/AddLeadFileLink.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            if ('@(ViewBag.LeadId)' != '') {
                $('html, body').animate({
                    scrollTop: $("#lead@(ViewBag.LeadId)").offset().top - 50
                }, 0);
            }

            GetStatusCounts();

            //if(((int)Session["SLFilterID"]) != null){
            //    var statusId = ((int)Session["SLFilterID"]);
            //    switch(statusId){
            //        case statusId:
            //            $("#status-" + statusId).css("color", "black");
            //            $("#status-" + statusId).parent().addClass("label-default");
            //            $("#status-" + statusId).parent().removeClass("label-primary");
            //            break;
            //        default:
            //            $("#newLead").css("color", "black");
            //            break;
            //    }
            //}

        });



        function ShowAddSupplierItemModal(itemId){
            $("#selectSupItem").modal("show");
            setLeadId(itemId);
        }


        function GetStatusCounts(){

            console.log("Get Status Count");

            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", {id: 1} ,function(result, status){
                console.log(result);
                $("#status-1").text("New - " + result);
            })
            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", {id: 2} ,function(result, status){
                console.log(result);
                $("#status-2").text("Sales - " + result);
            })
            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", {id: 3} ,function(result, status){
                console.log(result);
                $("#status-3").text("Procurement - " + result);
            })Expres
            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", { id: 4 }, function (result, status) {
                console.log(result);
                $("#status-4").text("For Approval - " + result);
            })
            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", {id: 5} ,function(result, status){
                console.log(result);
                $("#status-5").text("Approved - " + result);
            })
            $.get("/SalesLeads/SalesLeads/GetLeadsStatusCounts", { id: 6 }, function (result, status) {
                console.log(result);
                $("#status-6").text("Approved - " + result);
            })
        }

    </script>

}
